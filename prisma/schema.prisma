datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  ADMIN
  PROJECT_MANAGER
  EVENT_COORDINATOR
  ATTENDEE
}

model User {
  id               Int       @id @default(autoincrement())
  email            String    @unique
  password         String
  firstName        String?
  lastName         String?
  role             Role
  projects         Project[] @relation("ProjectParticipants")
  events           Event[]   @relation("EventParticipants")
  sentMessages     Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model Project {
  id            Int      @id @default(autoincrement())
  name          String
  description   String?
  startDate     DateTime
  endDate       DateTime?
  participants  User[]   @relation("ProjectParticipants")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Event {
  id            Int      @id @default(autoincrement())
  name          String
  description   String?
  startDate     DateTime
  endDate       DateTime?
  location      String?
  participants  User[]   @relation("EventParticipants")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Message {
  id            Int      @id @default(autoincrement())
  content       String
  createdAt     DateTime @default(now())
  senderId      Int
  sender        User     @relation(name: "SentMessages", fields: [senderId], references: [id])
  receiverId    Int
  receiver      User     @relation(name: "ReceivedMessages", fields: [receiverId], references: [id])
}

model Product {
  id            Int      @id @default(autoincrement())
  name          String
  category      String
  description   String
  maintenance   DateTime
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  @@map("products")
}

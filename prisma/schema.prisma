datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  ADMIN
  PROJECT_MANAGER
  EVENT_COORDINATOR
  ATTENDEE
}

// User model
model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  firstName String?
  lastName  String?
  role      Role
}

// Event
model Event {
  id         Int         @id @default(autoincrement())
  title      String
  location   String?
  startDate  DateTime
  endDate    DateTime
  numOfPos   Int?
  posSystems PosSystem[] // Relation indicating an event can have multiple POS systems
  ordersData Json        // This field will store all orders data as JSON
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model PosSystem {
  id        Int     @id @default(autoincrement())
  eventId   Int
  event     Event   @relation(fields: [eventId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}




model foodtruck {
  id            Int      @id @default(autoincrement())
  name          String
  category      String
  description   String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  @@map("foodtrucks")
}
model foodItem {
  id            Int      @id @default(autoincrement())
  name          String
  category      String
  cost          Float?
  quantity      Int
  expiry        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  itemSuppliers ItemSupplier[]
  
  @@map("foodItems")
}
model Supplier {
  id                Int             @id @default(autoincrement())
  name              String
  contact           String
  itemSuppliers     ItemSupplier[]
}
model ItemSupplier {
  id              Int             @id @default(autoincrement())
  itemId          Int
  supplierId      Int
  price           Float
  Item            foodItem        @relation(fields: [itemId], references: [id])
  Supplier        Supplier        @relation(fields: [supplierId], references: [id])
  orderHistories  OrderHistory[]
}

model OrderHistory {
  id              Int          @id @default(autoincrement())
  itemSupplierId  Int
  ItemSupplier    ItemSupplier @relation(fields: [itemSupplierId], references: [id])
  quantity        Int
  addedAt         DateTime     @default(now())
}
model inventory {
  id            Int      @id @default(autoincrement())
  name          String
  description   String
  quantity      Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  @@map("inventorys")
}
model Clock {
  id        Int      @id @default(autoincrement())
  timestamp DateTime @default(now())
}
